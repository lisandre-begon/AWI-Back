async function getGestionnaireById(req, res) {
  const id = req.params.id; // Récupération de l'ID depuis les paramètres de la requête
  try {
    const response = await apiClient.get(`/gestionnaires/${id}`);
    res.status(200).json(response.data);
  } catch (error) {
    console.error(`Erreur lors de la récupération du gestionnaire avec l'ID ${id}:`, error);
    res.status(500).json({ error: 'Erreur lors de la récupération du gestionnaire' });
  }
}

async function getGestionnaires(res) {
  try {
    const response = await apiClient.get('/gestionnaires');
    res.status(200).json(response.data);
  } catch (error) {
    console.error('Erreur lors de la récupération des gestionnaires:', error);
    res.status(500).json({ error: 'Erreur lors de la récupération des gestionnaires' });
  }
}

async function createGestionnaire(req, res) {
  const gestionnaire = req.body;
  try {
    const response = await apiClient.post('/gestionnaires', gestionnaire);
    res.status(201).json(response.data);
  } catch (error) {
    console.error('Erreur lors de la création du gestionnaire:', error);
    res.status(500).json({ error: 'Erreur lors de la création du gestionnaire' });
  }
}

async function updateGestionnaire(req, res) {
  const id = req.params.id;
  const gestionnaire = req.body;
  try {
    const response = await apiClient.put(`/gestionnaires/${id}`, gestionnaire);
    res.status(200).json(response.data);
  } catch (error) {
    console.error(`Erreur lors de la mise à jour du gestionnaire avec l'ID ${id}:`, error);
    res.status(500).json({ error: 'Erreur lors de la mise à jour du gestionnaire' });
  }
}

async function deleteGestionnaire(req, res) {
  const id = req.params.id;
  try {
    await apiClient.delete(`/gestionnaires/${id}`);
    res.status(204).end();
  } catch (error) {
    console.error(`Erreur lors de la suppression du gestionnaire avec l'ID ${id}:`, error);
    res.status(500).json({ error: 'Erreur lors de la suppression du gestionnaire' });
  }
}

module.exports = {
  getGestionnaireById,
  getGestionnaires,
  createGestionnaire,
  updateGestionnaire,
  deleteGestionnaire,
};